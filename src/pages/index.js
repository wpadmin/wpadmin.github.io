import React, { useState, useEffect } from 'react';
import Layout from '@theme/Layout';
import useDocusaurusContext from '@docusaurus/useDocusaurusContext';
import styles from './index.module.css';
import clsx from 'clsx';
import Link from '@docusaurus/Link';

export default function Home() {
  const [isAiMode, setIsAiMode] = useState(false);
  const [dateTimeInfo, setDateTimeInfo] = useState('');
  const { siteConfig } = useDocusaurusContext();

  useEffect(() => {
    const updateDateTime = () => {
      const now = new Date();

      // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (UTC+3)
      const mskTime = new Date(now.getTime() + (3 * 60 * 60 * 1000));

      const months = [
        '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
        '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
      ];

      const seasons = {
        0: '–ó–∏–º–∞', 1: '–ó–∏–º–∞', 2: '–í–µ—Å–Ω–∞',
        3: '–í–µ—Å–Ω–∞', 4: '–í–µ—Å–Ω–∞', 5: '–õ–µ—Ç–æ',
        6: '–õ–µ—Ç–æ', 7: '–õ–µ—Ç–æ', 8: '–û—Å–µ–Ω—å',
        9: '–û—Å–µ–Ω—å', 10: '–û—Å–µ–Ω—å', 11: '–ó–∏–º–∞'
      };

      const date = mskTime.getDate();
      const month = months[mskTime.getMonth()];
      const year = mskTime.getFullYear();
      const season = seasons[mskTime.getMonth()];
      const hours = mskTime.getHours().toString().padStart(2, '0');
      const minutes = mskTime.getMinutes().toString().padStart(2, '0');

      const formatted = `–ù–∞ –¥–≤–æ—Ä–µ ${date} ${month} ${year} –≥–æ–¥. –°–µ–∑–æ–Ω ${season}. ${hours}:${minutes} –ú–°–ö`;
      setDateTimeInfo(formatted);
    };

    updateDateTime();
    const timer = setInterval(updateDateTime, 60000); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

    return () => clearInterval(timer);
  }, []);

  const skills = {
    frontend: [
      { name: 'HTML5' },
      { name: 'CSS3' },
      { name: 'Bootstrap' },
      { name: 'JavaScript' },
      { name: 'jQuery' },
      { name: 'React.js' },
      { name: 'Tailwind CSS' },
    ],
    backend: [
      { name: 'PHP' },
      { name: 'MySQL' },
      { name: 'WordPress' },
      { name: 'Next.js' },
    ],
    os: [
      { name: 'Windows' },
      { name: 'macOS' },
      { name: 'Debian' },
      { name: 'Ubuntu' },
    ],
    tools: [
      { name: 'Git' },
      { name: 'VS Code' },
    ]
  };

  return (
    <Layout
      title={`Welcome to ${siteConfig.title}`}
      description="Portfolio of a WordPress and Frontend Developer"
    >
      <main className={styles.main}>
        <div className={styles.container}>
          <div className={styles.timeStamp}>
            <span>{dateTimeInfo}</span>
            <Link
              className="button button--secondary button--lg"
              to="/blog">
              –ú–æ–∏ –ó–∞–ø–∏—Å–∏
            </Link>
            <Link
              className="button button--secondary button--lg"
              to="/docs/intro">
              –î–æ–∫–∏
            </Link>
          </div>

          <div className={styles.photoContainer}>
            <img
              src={isAiMode ? "/img/ai-photo.jpg" : "/img/real-photo.jpg"}
              alt={isAiMode ? "AI –≤–µ—Ä—Å–∏—è —Ñ–æ—Ç–æ" : "–†–µ–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ"}
              className={styles.photo}
            />
            <button
              onClick={() => setIsAiMode(!isAiMode)}
              className={clsx(styles.toggleButton, {
                [styles.aiMode]: isAiMode
              })}
              aria-label="Toggle photo mode"
            >
              <div className={styles.toggleKnob}>
                {isAiMode ? 'ü§ñ' : 'üë§'}
              </div>
              <span className={styles.toggleLabel}>
                {isAiMode ? 'AI –≤–µ—Ä—Å–∏—è' : '–†–µ–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ'}
              </span>
            </button>
          </div>

          <div className={styles.introduction}>
            <h1>–°–∞–ª—é—Ç, —è Web-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫! üëã</h1>
            <p className={styles.bio}>
              –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ WordPress –∏ Nextjs.
            </p>
          </div>

          <div className={styles.skillsSection}>
            <div className={styles.skillCategory}>
              <h3>Frontend</h3>
              <div className={styles.badges}>
                {skills.frontend.map((skill) => (
                  <span
                    key={skill.name}
                    className={styles.badge}
                    role="listitem"
                  >
                    {skill.name}
                  </span>
                ))}
              </div>
            </div>

            <div className={styles.skillCategory}>
              <h3>Backend</h3>
              <div className={styles.badges}>
                {skills.backend.map((skill) => (
                  <span
                    key={skill.name}
                    className={styles.badge}
                    role="listitem"
                  >
                    {skill.name}
                  </span>
                ))}
              </div>
            </div>

            <div className={styles.skillCategory}>
              <h3>–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã</h3>
              <div className={styles.badges}>
                {skills.os.map((skill) => (
                  <span
                    key={skill.name}
                    className={styles.badge}
                    role="listitem"
                  >
                    {skill.name}
                  </span>
                ))}
              </div>
            </div>

            <div className={styles.skillCategory}>
              <h3>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</h3>
              <div className={styles.badges}>
                {skills.tools.map((skill) => (
                  <span
                    key={skill.name}
                    className={styles.badge}
                    role="listitem"
                  >
                    {skill.name}
                  </span>
                ))}
              </div>
            </div>
          </div>
        </div>
      </main>
    </Layout>
  );
}